{"version":3,"sources":["components/bottom.js","components/Icon.js","components/weather.js","App.js","index.js"],"names":["Bottom","info","temp","humidity","pressure","speed","visibility","deg","main","className","Icon","React","useState","weatherIcon","setWeatherIcon","useEffect","Weather","input","setinput","setinfo","userloc","setuserloc","isinput","setisinput","geoSuccess","position","lon","coords","longitude","lat","latitude","userlon","userlat","geoError","alert","search","a","url","undefined","console","log","fetch","res","json","data","name","wind","country","sys","weather","navigator","geolocation","getCurrentPosition","type","value","onChange","e","target","onClick","onMouseOver","aria-hidden","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98f67140.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Bottom = ({ info }) => {\r\n\r\n    const { temp,\r\n        humidity,\r\n        pressure,\r\n        speed,\r\n        visibility,\r\n        deg,\r\n        main } = info\r\n    return (\r\n        <>\r\n            <div className=\"bottom_container\">\r\n                <div className=\"data\">\r\n                  \r\n                    <span className=\"temp\">{temp}°C  <i className=\"wi wi-thermometer\"></i></span>\r\n                    <span className=\"condition\">{main}</span>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <span className=\"info\">Pressure <br /> {pressure} mb</span>\r\n                    <span className=\"info\">Humidity  <br />{humidity}%</span>\r\n                    <span className=\"info\">Visibilty <br />{visibility}m</span>\r\n                    <span className=\"info extra \">Wind <br />\r\n                        <div className=\"wind\">\r\n                            <span className=\"speed\">Speed <br />{speed}km/hr</span>\r\n                            <span className=\"deg\">Angle <br />{deg}°</span>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Bottom\r\n","\r\nimport React from 'react'\r\n\r\nconst Icon = ({ main }) => {\r\n    const [weatherIcon, setWeatherIcon] = React.useState(\"\")\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (main) {\r\n            switch (main) {\r\n                case \"Clouds\": setWeatherIcon(\"wi-cloudy\")\r\n                    break;\r\n                case \"Haze\": setWeatherIcon(\"wi-fog\")\r\n                    break;\r\n                case \"Clear\": setWeatherIcon(\"wi-day-sunny\")\r\n                    break;\r\n                case \"Mist\": setWeatherIcon(\"wi-dust\")\r\n                    break;\r\n                case \"Rain\": setWeatherIcon(\"wi-rain\")\r\n                    break;\r\n                case \"Thunderstrom\": setWeatherIcon(\"wi-strom-showers\")\r\n                    break;\r\n                case \"Smoke\": setWeatherIcon(\"wi-smoke\")\r\n                    break;\r\n                case \"Smog\": setWeatherIcon(\"wi-smog\")\r\n                    break;\r\n                case \"Snow\": setWeatherIcon(\"wi-snow\")\r\n                    break;\r\n                default:\r\n                    setWeatherIcon(\"wi-day-sunny\");\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }, [main]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"iconify\">\r\n                <i className={`wi ${weatherIcon}`}></i>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Icon\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\nimport Bottom from './bottom'\r\nimport Icon from './Icon'\r\nimport \"./weather.css\"\r\nconst Weather = () => {\r\n\r\n    const [input, setinput] = useState(\"delhi\")\r\n    const [info, setinfo] = useState(\"\")\r\n    const [userloc, setuserloc] = useState({})\r\n    const [isinput, setisinput] = useState(false)\r\n\r\n\r\n//------------------------getting live location of user---------------------------------\r\n\r\n//checking location is active or not\r\n    const location = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(geoSuccess, geoError)\r\n        }\r\n        else {\r\n            console.log(\"location not active\")  \r\n        }\r\n    }\r\n\r\n//getting longitude and latitude of user(location active)   \r\n    function geoSuccess(position) {\r\n        const lon = position.coords.longitude;\r\n        const lat = position.coords.latitude;\r\n        setuserloc({\r\n            userlon: lon,\r\n            userlat: lat\r\n        })\r\n    }\r\n\r\n//alerting the user and setting random latitude and longitude (location not active)    \r\n    function geoError() {\r\n        alert(\"Geocoder failed.\");\r\n        setuserloc({\r\n            userlat : \t28.653,\r\n            userlon : \t77.228\r\n        })\r\n    }\r\n//destructuring the location\r\n    const { userlon, userlat } = userloc;\r\n\r\n    // console.log(userloc)\r\n\r\n//--------------------------------------------------------------------------------------\r\n\r\n//--------------------------------GETTING THE DATA----------------------------\r\n    const search = async () => {\r\n        try {\r\n            let url;\r\n            if (isinput === true) {\r\n                url = `https://api.openweathermap.org/data/2.5/weather?q=${input}&units=metric&&appid=8b75858b6d1405245fd495370bf2ff23`\r\n            }\r\n            else if (userloc!==undefined) {\r\n                url = `https://api.openweathermap.org/data/2.5/weather?lat=${userlat}&lon=${userlon}&units=metric&appid=8b75858b6d1405245fd495370bf2ff23`\r\n            }\r\n            console.log(url)\r\n\r\n            let res = await fetch(url);\r\n            let data = await res.json()\r\n\r\n//destructuring the data\r\n\r\n            const { temp, humidity, pressure } = data.main\r\n            const { name, visibility } = data\r\n            const { speed, deg } = data.wind\r\n            const { country } = data.sys\r\n            const { main } = data.weather[0];\r\n            // console.log(visibility)\r\n//storing data in state variable\r\n\r\n            const myNewData = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                speed,\r\n                visibility,\r\n                deg,\r\n                name,\r\n                main,\r\n                country\r\n            }\r\n\r\n            setinfo(myNewData)\r\n            setinput(\"\")\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n//--------------------------------------------------------------------------------------\r\n\r\n//-------------------RUNNING THE PROGRAM WHEN PAGE REFRESH-------------------------------\r\n   \r\n    useEffect(() => {\r\n        location()\r\n        if(userlon!==undefined){\r\n        search()\r\n            // setisinput(true)\r\n        }\r\n    }, [userlon])\r\n\r\n//----------------------------------------------------------------------------------------\r\n\r\n    const {\r\n        name,\r\n        main, country } = info\r\n       \r\n  \r\n    return (\r\n        <>\r\n       \r\n            <div className=\"main\">\r\n                <div className=\"city\"><p>{name},{country}</p> \r\n                <p className={isinput?\"live not\":\"live\"}>LIVE</p>\r\n                </div>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"top\">\r\n                        <Icon main={main} />\r\n\r\n                        <div className=\"search_container\">\r\n                            <input type=\"text\" value={input} onChange={(e) => setinput(e.target.value)} />\r\n                            <button onClick={() => { search()}} onMouseOver={()=>{setisinput(true)}}>\r\n                                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <Bottom info={info} />\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\nimport Weather from './components/weather'\nconst App = () => {\n \n  return (\n\n    <>\n      <Weather  />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}